available.packages()
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
search()
find.package("devtools")
find.package(devtools)
getwd()
dir()
getwd()
getwd()
getwd()
getwd()
getwd()
install.packages(c("httr", "RCurl"))
getwd()
getwd()
setwd("~/")
getwd()
add2 <- function(x,y) {
x + y
}
addÃ©(3,5)
add2(3,5)
source('~/.active-rstudio-document')
above <- function(x,n) {
use <- x > n
x[use]
}
x <- 1:20
above(x)
above(x,5)
above(x)
above <- function(x,n=10) {
use <- x > n
x[use]
}
above(x)
source('~/.active-rstudio-document')
airquality
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y,[,i],na.rm = removeNA)
}
means
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y,[,i],na.rm = removeNA)
}
means
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y,[,i],na.rm = removeNA)
}
means
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y,[,i],na.rm = removeNA)
}
means
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y,[,i],na.rm = removeNA)
}
means
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y,[,i],na.rm = removeNA)
}
means
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y,[,i],na.rm = removeNA)
}
means
}
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i],na.rm = removeNA)
}
means
}
columnmean(airquality)
data
?rm
search()
ls()
rm(ls())
rm([ls()])
rm(list =ls())
source('~/datasciencecoursera/R_Programming/ProgrammingAssignment2/cachematrix.R')
a <- makeCacheMatrix()
a$set(matrix(1:4,2,2)
a
a$set(matrix(1:4,2,2))
a
a$get
a$get()
cachesolve(a)
cacheSolve(a)
a$get()
rm(list =ls())
setwd("~/datasciencecoursera/GettingCleaningData/UCI HAR Dataset")
features <- read.table("./features.txt")[,2]
View(features)
class(features)
X_test <- read.table("./test/X_test.txt", col.names = features)
View(X_test)
Feat_Factor <-  grepl("mean()|std()", features)
data_test <- X_Test[,Feat_Factor]
data_test <- X_test[,Feat_Factor]
activity_labels <- read.table("~/datasciencecoursera/GettingCleaningData/UCI HAR Dataset/activity_labels.txt", quote="\"")
View(activity_labels)
View(activity_labels)
activity_labels <- read.table("~/datasciencecoursera/GettingCleaningData/UCI HAR Dataset/activity_labels.txt", quote="\"")
?merge
Y_test <- read.table("./test/Y_test.txt")
View(Y_test)
View(Y_test)
?c_bind
?cbind
cbind(Y_test,data_test)
data_Test2 <- cbind(Y_test,data_test)
View(data_Test2)
?merge
activity <- read.table("./activity_labels.txt",col.names = c("Activity_Id","Activity_Nm")"))
activity <- read.table("./activity_labels.txt",col.names = c("Activity_Id","Activity_Nm"))
activity <- read.table("./activity_labels.txt",col.names = c("Activity_Id","Activity_Nm"))
View(activity)
View(activity)
names(activity)
names(Y_test)
names(data_Test2)
X_test <- read.table("./test/X_test.txt", col.names = features)[,Feat_Factor]
data_test <- cbind(Y_test,data_test)
activity <- read.table("./activity_labels.txt",col.names = c("activity_Id","activity_Nm"))
View(activity)
View(data_test)
Merged = merge(activity,data_test,by = intersect(activity$.activity_Id,data_test$V1 ))
View(Y_test)
View(Merged)
View(Merged)
Merged = merge(activity,data_test,by = intersect(activity$activity_Id,data_test$V1 ))
Merged = merge(activity,data_test,by = intersect(activity$activity_Id,data_test$V1 ))
Merged = merge(activity,data_test,by.x = "activity_Id", by.y ="V1" )
View(Merged)
Subj_test <- read.table("./test/subject_test.txt", col.names = "subject_Id")
View(X_test)
Merged$subject_Id <- subj_test$subject_Id
Subj_test <- read.table("./test/subject_test.txt", col.names = "subject_Id")
Merged$subject_Id <- subj_test$subject_Id
subj_test <- read.table("./test/subject_test.txt", col.names = "subject_Id")
Merged$subject_Id <- subj_test$subject_Id
View(Merged)
View(Merged)
